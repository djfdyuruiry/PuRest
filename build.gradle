defaultTasks "cleanRelease", "makeReleaseDir", "copyReleaseTemplate", "copyServerCode", /*"unzipBin", "unzipLib", "removeTmpFiles",*/ "copyFavIcon", "copyJsonLib", "copyServerConfig", "cleanBuildPlaceholders"

// Prepare directories
task cleanRelease(type: Delete) {
    def releaseFolder = new File("build/release")

    if (releaseFolder.exists()) {
        delete "build/release"
    }
}

task makeReleaseDir {
    def releaseDir = new File("build/release")
    releaseDir.mkdirs()
}

task copyReleaseTemplate(type: Copy) {
    from "build/template"
    into "build/release"
    include "**/**"
}

// Copy project code
task copyServerCode(type: Copy) {
    from "src/"
    into "build/release/lua/PuRest"
    include "**/*"
}

task copyJsonLib(type: Copy) {
    from "lib/lua"
    into "build/release/lua"
    include "**/*"
}

/*
// Unpack binaries/libraries
task unzipBin(type: Copy) {
    def zipFile = file("build/release/bin/bin.zip")
    def outputDir = file("build/release/bin")

    from zipTree(zipFile)
    into outputDir
}

task unzipLib(type: Copy) {
    def zipFile = file("build/release/lua/libs.zip")
    def outputDir = file("build/release/lua")

    from zipTree(zipFile)
    into outputDir
}

// Clean up build mess
task removeTmpFiles(type: Delete) {
    delete "build/release/bin/bin.zip", "build/release/lua/lib.zip"
}
*/

task copyFavIcon(type: Copy) {
    from "resources/"
    into "build/release/web"
    include "favicon.ico"
}

// TODO: add landing page for default server install and copy here

// Copy server config
task copyServerConfig(type: Copy) {
    from "src/Config"
    into "build/release/cfg"
    include "DefaultConfig.lua"
    rename "DefaultConfig.lua", "cfg.lua"
}

// Delete build placeholder files
task cleanBuildPlaceholders(type: Delete) {
    delete fileTree(dir: "build/release/", include: "**/build.txt")
}
